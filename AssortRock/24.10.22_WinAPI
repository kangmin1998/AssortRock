윈도우의 창을 여러개를 안만들고, 하나만 만들기 때문에.....
근데 윈도우 창을 여러개 만들수 있다는 가능성이 있으므로 map사용
std::map<std::string, WMDCLASSEXA>


if (EndInter != FindInter) => Level0의 엔진베이스도 바꿨다 확인!!
{
사용하는 이유는 throw를 이용하지 않고 바로 터트린다.
std::string 내부에 들고있는 함수 맴버변수
	ㄴ std::string => std::vector<char>
	ㄴ std::vector<char> =>char*를 들고있다. 
const char* Text = ErrorText.c_str();

}\

윈도우 클래스를 등록시켜야 그 형태로 만들수 있다는 뜻으로
=> void Open();												// 윈도우를 열어라.
=> void Create(std::string_view _Title Name = "Default");	// 오픈 후 타이틀을 만든다.
=> void Create(std::string_view _Class Name = "Default");	// 타이틀을 만든 후 윈도우의 생성을 시작함.


--------------------------------------------------------------------------------------------------
api프로젝트

1. base는 그냥 당연히 있다.
	- 혹은 일반 프로그래머(엔진을 이용만하는) 프로그래머가 접근하지 고칠 생각도 못한다.
	- os와 플랫폼 수학.
	- 한번 완성하면 다시 빌드를 하지 않게 된다.

2.	플랫폼
	- os와 관련된 녀석들이 존재한다. <- 이부분도 손대기 힘들다.
	- 입력

3. 엔진 코어
 - 오프젝트
 - 랜더링
 - 충돌

 오브젝트가 만들어지면 많은 header와 cpp들이 만들어 질것이고 대부분 나중에 안정되면 다시 빌드되지 않는다. -> 미리컴파일된 헤더

 message처리 부분이 제대로 완성되지 않았다. -> 펑셔널
  - 메시지 처리하고 나서 처리한다.


  - while문 안에서 돌아한다.
  void	tick();
  void	Render();


  -----------------------------------------------------------------------------------------------------------------
	함수 포인터 , 객체 넘거라.  <- 펑셔널
	 - 함수 포인터를 쉽게 사용하려고 functional이 나왔다.
	 - std::functoin<void()   <- 제한이 없다.


	__stdcall

	class Button   // 너도 너 할일 하는데 그 사이에 내 할일도 해줘
	{
	public:

		void Click()
		{
			ClickFunction();
		}
		void (*ChilckFunctoin) ();
		{

		}
	}


	int main()
	{

	★★멤버함수 포인터를 사용하고 싶을 때 문제가 된다. -> 멤버함수 쓸려면 객체가 있어야한다.
	void(__thiscall player::*Playerunction)();
	//멤버 함수는 호출하려면 객체가 필요하다.

	Player Newplayer;
	NewPlayer.Damege();


	}

	PM_REMOVE -> 내가 처리할 때 지금까지 쌓인 메세지를 다 지워준다.

	메세지 데드 타임 -> 메세지가 없는 시간에 내 게임을 돌리는 것.



	--------------------------------------------------------------------------------------------------------------------
	Delegate


	--------------------------------------------------------------------------------------------------------------------
	- 오늘 배운 내용 정리

	펑셔널 배우고 delegate배웠고 
	윈도우는 함수 포인터를 받아서 대신 실행해줘라............
	peekmessage를 기억해라................
	UEngineAPICore  ->  오늘 볼것.


	enginecore에서 엔진 클래스를 종합 해줘서 위도우 띄우기, 윈도우 사이즈 바꾸기, 윈도우 이름 바꾸기?...등등










